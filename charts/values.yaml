cluster:
  name: cluster-rke2
  # annotations:
  # key: value
  # labels:
  # key: value
  config:
    #kubernetesVersion: v1.29.8+rke2r1 # https://github.com/rancher/rke2/releases
    enableNetworkPolicy: false
    localClusterAuthEndpoint:
      enabled: false
    # additionalManifests: |-
    #   apiVersion: v1
    #   kind: Pod
    #   metadata:
    #     name: example-manifest
    #   spec:
    #     containers:
    #     - name: example
    #       image: example:1.0.0
    #       ports:
    #       - containerPort: 80
    # agentEnvVars:
    # - name: ""
    #   value: ""
    chartValues:
      rke2-calico: {}
    # defaultClusterRoleForProjectMembers: ''
    # defaultPodSecurityAdmissionConfigurationTemplateName: ''
    # defaultPodSecurityPolicyTemplateName: ''
    globalConfig:
      systemDefaultRegistry: docker.io # default registry
      cni: calico # canal, calico, cilium, multus,canal, multus,calico, multus,cilium
        # token: ''
        # tls-san:
        # - url
        # - ip
        # disable:
        # - rke2-coredns
      # - rke2-ingress-nginx
      # - rke2-metrics-server
      disable_scheduler: false
      disable_cloud_controller: false
      disable_kube_proxy: false
      etcd_expose_metrics: false
      profile: '' # cis-1.6, cis-1.23
      etcd:
        disableSnapshots: true
        snapshotRetention: 5
        snapshotScheduleCron: 0 */5 * * *
      selinux: false
      secrets_encryption: false
      write_kubeconfig_mode: 0600
      use_service_account_credentials: false
      protect_kernel_defaults: false
      cloud_provider_name: '' # https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/kubernetes-clusters-in-rancher-setup/set-up-cloud-providers
      # cloud_provider_config: '' # cloud provider config secret here (example: secret://fleet-default:cloudprovider)
      # kube_controller_manager_arg:
      # - kube controller manager arguments here (https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager)
      # kube_scheduler_arg:
      # - kube scheduler arguments here (https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler)
      # kube_apiserver_arg:
      # - kube apiserver arguments here (https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver)
      # kube_proxy_arg:
      # - kube proxy arguments here (https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy)
      # kubelet_arg:
      # - kubelet arguments here (https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet)
      # controlPlaneConfig:
      # same options as globalConfig
      # only will apply to the control plane nodes
      # workerConfig:
      # same options as globalConfig
      # only will apply to the worker nodes
    registries:
      enabled: false
        # configs:
        # - name: registry.example.com
        # authConfigSecretName: registry-creds
        # caBundle: ''
        # insecureSkipVerify: false
        # tlsSecretName: ''
        # mirrors:
        # - name: docker.io
        # endpoints: ['registry.example.com']
      # rewrite:
      # "^rancher/(.*)": "mirrorproject/rancher-images/$1"
    upgradeStrategy:
      controlPlaneConcurrency: 10%
      controlPlaneDrainOptions:
        enabled: false
        # deleteEmptyDirData: true
        # disableEviction: false
        # force: false
        # gracePeriod: -1
        # ignoreDaemonSets: true
        # ignoreErrors: false
        # skipWaitForDeleteTimeoutSeconds: 0
        # timeout: 120
      workerConcurrency: 10%
      workerDrainOptions:
        enabled: false
        # deleteEmptyDirData: true
        # disableEviction: false
        # force: false
        # gracePeriod: -1
        # ignoreDaemonSets: true
        # ignoreErrors: false
        # skipWaitForDeleteTimeoutSeconds: 0
        # timeout: 120

cloudprovider: openstack

nodepools:
  - etcd: true
    controlplane: true
    worker: true
    labels: {}
    quantity: 1
    name: nodepool-1
    authUrl: "http://10.100.1.22:5000"
    domainName: Default
    flavorName: m1.large
    imageName: "Ubuntu 22.04 LTS"
    keypairName: whitecruiser
    netName: PUBLIC
    privateKeyFile: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEowIBAAKCAQEA0cWzjjgGMqsTZk2oOxKGvJuZfqquvlv6nRrjpvjK77uV5Q6A
      5F9BKU2BRxkOAQgYNmgDVVjnb7L4FU/gC8LvRPweOQltpcmf3fkXSfhoBcqFzviG
      sLrl842ltlM4XtjvIYyVXU7QO8wYASR/Aow++0ZAM41qpzQTN3OGb4Ok6NYhW7Ln
      o6zTUpmDGqeyJjoRECBHaMnuLoEjmpxkWAsoC3EeI9wqVwMsHh09YWN2Z6cnaiQY
      nL+KbbXWQAKsErwJVpJVsQK7rLG+8hmncj1375bMmuAP/yvKngFqaLbYwUrTSdSk
      PyXM50oPOiD9oQboDcV/CfWTdM4mgA5NguJI0QIDAQABAoIBAEIFKNevxjOYKAjg
      k/vTfthJWGvHKCv9IsjjN5bLYoNE1I48nFBDsmxfWjqYJhIpDAXDgpkP2/cJqo56
      jxbkiQ17E7/7uaid5lSkGrJLHeIEtUxIZ4ujps+aWvchBfLD767tYez16w+G0l85
      r0eMAB5xI6+V6GUrPIkNMNhT5Ejq2Vb34KIr3cXEmDr3KGCEyXIJmxy3/SmOdw1V
      MpDSkF0qo2Y+CpLIE7kM+qu4uYv30PpLneY3EyXIpXIS+cN6zo+o42BnGRsTu6SA
      gnU5zQWEFntG2aygY68d0wRG6Nzz0gqv9sqoFCxiEhW7CTyB5PGvwKBemDHoaz2/
      0UJ0EOECgYEA+gVFaybXvY0LzLpwHk7lPFFHfYbSEEDOtsUx0V5oPJ/lySLWoQHk
      LZHk1O3uAD3z7p7iMd5cWs0AHVPo4Djc5Oq9upiMIG53WuWHH5jSO4uGTru6X7nN
      C7LagI+7Ds2di8qaEm4/JVOTQj/4hcag6Wu8ijc8dzxFzxwKVbtD9m0CgYEA1soD
      cnu74+57cVLYVvRJELuIRfG3mf5VQbfywSuqZsTlD3BcIkgnxoIVdevVT/n5KVPs
      +rQZPwHlBRIGb7PJORfPs+1qDVPdBb5UCgZLtSN8ZcBmVzy7G8NK1KwauqNEPZxy
      B93fZV5EXFUrlXkA7AuysUDZBpGjwa5MNxmXrXUCgYB4wTT/BLqsZUQutFlUehyD
      nmod+ZDZosN0SRe/nI5RwZS1KatqBkTTsaRJJ0WNPl7jgD+VgGUwwdRtVcqjCTO/
      KJVMW0NKoq/o6fTyUNgxRDkxK8BfXZjoLpEUCNd61dpi2w7BGhhLiesU01rQGdg8
      BPoB852zpRu+ZTekopa3nQKBgQCxTXMJBxDzt4JY6q1BIkhKMrPsIPuRd/xC0qjm
      QrhYO0Jmuzai6fNDj1BN1k5wxYWjUu81iIOqmlLGG7oKbVu28Gv5OAsqU0cJHbLb
      z5ShQ1jF2cvhSXWfFlfoNOWfmXSUc1dCHSny0J0XpwriSU+0ineIkGJWZNTL5ahu
      d4bYnQKBgBvSjE+AKRWMpOhBZupEW9ehyh8g+Jl2g37DDz/A7CdKNjBoZSOAmzj/
      xr7E4tY38H1hlX4jUa1vQznKCZwyXeldPp0NqMpJQmQeotGHGWArETQDBVKa3mht
      H0EQ78ThFuF+3PVnNBCHxofdhPwQumnJh7BTyMyeqY2swZ2DSuOU
      -----END RSA PRIVATE KEY-----
    region: RegionOne
    secGroups: default
    sshPort: 22
    sshUser: ubuntu
    tenantName: hventura
    username: hventura
    userDataFile: |
      #cloud-config
      package_update: true
      package_upgrade: true
      runcmd:
        - sudo apt-get update
        - sudo apt-get install -y linux-modules-extra-$(uname -r)
        - sudo modprobe nvme_tcp
        - echo "nvme_tcp" | sudo tee -a /etc/modules
        - echo 1024 | sudo tee /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages
        - echo "vm.nr_hugepages = 1024" | sudo tee -a /etc/sysctl.conf
        - echo "fs.inotify.max_user_watches=524288" >> /etc/sysctl.conf
        - echo "fs.inotify.max_user_instances=1024" >> /etc/sysctl.conf
        - echo "fs.inotify.max_queued_events=16384" >> /etc/sysctl.conf
        - sysctl -p

addons:
  monitoring:
    enabled: false
    # version: 104.1.0+up57.0.3
    # values:
      # values here

  longhorn:
    enabled: false
    # version: 103.2.2+up1.5.4
    # values:
      # values here
  kubevirt:
    enabled: false
      # version: 103.2.2+up1.5.4
    # values:
    # values here

  metallb:
    enabled: false
    # values:
      # values here